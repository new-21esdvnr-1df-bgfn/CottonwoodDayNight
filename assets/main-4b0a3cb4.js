function p(o,t,e){let n=0;return t>2147483647&&(n=t-2147483647,t=2147483647),e??(e={timeoutId:void 0}),e.timeoutId=setTimeout(()=>{n>0?p(o,n,e):o()},t),e}function y(o){return{second:o.getSeconds(),minute:o.getMinutes(),hour:o.getHours(),day:o.getDate(),month:o.getMonth(),weekday:o.getDay(),year:o.getFullYear()}}function A(o,t){return new Date(o,t+1,0).getDate()}function g(o,t){return o<=t?t-o:6-o+t+1}function v(o,t){return()=>{try{const e=o();e instanceof Promise&&e.catch(n=>{t&&t(n)})}catch(e){t&&t(e)}}}class I{constructor({seconds:t,minutes:e,hours:n,days:s,months:a,weekdays:h}){if(!t||t.size===0)throw new Error("There must be at least one allowed second.");if(!e||e.size===0)throw new Error("There must be at least one allowed minute.");if(!n||n.size===0)throw new Error("There must be at least one allowed hour.");if(!a||a.size===0)throw new Error("There must be at least one allowed month.");if((!h||h.size===0)&&(!s||s.size===0))throw new Error("There must be at least one allowed day or weekday.");this.seconds=Array.from(t).sort((i,l)=>i-l),this.minutes=Array.from(e).sort((i,l)=>i-l),this.hours=Array.from(n).sort((i,l)=>i-l),this.days=Array.from(s).sort((i,l)=>i-l),this.months=Array.from(a).sort((i,l)=>i-l),this.weekdays=Array.from(h).sort((i,l)=>i-l);const d=(i,l,r)=>{if(l.some(u=>typeof u!="number"||u%1!==0||u<r.min||u>r.max))throw new Error(`${i} must only consist of integers which are within the range of ${r.min} and ${r.max}`)};d("seconds",this.seconds,{min:0,max:59}),d("minutes",this.minutes,{min:0,max:59}),d("hours",this.hours,{min:0,max:23}),d("days",this.days,{min:1,max:31}),d("months",this.months,{min:0,max:11}),d("weekdays",this.weekdays,{min:0,max:6}),this.reversed={seconds:this.seconds.map(i=>i).reverse(),minutes:this.minutes.map(i=>i).reverse(),hours:this.hours.map(i=>i).reverse(),days:this.days.map(i=>i).reverse(),months:this.months.map(i=>i).reverse(),weekdays:this.weekdays.map(i=>i).reverse()}}findAllowedHour(t,e){return t==="next"?this.hours.find(n=>n>=e):this.reversed.hours.find(n=>n<=e)}findAllowedMinute(t,e){return t==="next"?this.minutes.find(n=>n>=e):this.reversed.minutes.find(n=>n<=e)}findAllowedSecond(t,e){return t==="next"?this.seconds.find(n=>n>e):this.reversed.seconds.find(n=>n<e)}findAllowedTime(t,e){let n=this.findAllowedHour(t,e.hour);if(n!==void 0)if(n===e.hour){let s=this.findAllowedMinute(t,e.minute);if(s!==void 0)if(s===e.minute){const a=this.findAllowedSecond(t,e.second);if(a!==void 0)return{hour:n,minute:s,second:a};if(s=this.findAllowedMinute(t,t==="next"?e.minute+1:e.minute-1),s!==void 0)return{hour:n,minute:s,second:t==="next"?this.seconds[0]:this.reversed.seconds[0]}}else return{hour:n,minute:s,second:t==="next"?this.seconds[0]:this.reversed.seconds[0]};if(n=this.findAllowedHour(t,t==="next"?e.hour+1:e.hour-1),n!==void 0)return{hour:n,minute:t==="next"?this.minutes[0]:this.reversed.minutes[0],second:t==="next"?this.seconds[0]:this.reversed.seconds[0]}}else return{hour:n,minute:t==="next"?this.minutes[0]:this.reversed.minutes[0],second:t==="next"?this.seconds[0]:this.reversed.seconds[0]}}findAllowedDayInMonth(t,e,n,s){var a,h;if(s<1)throw new Error("startDay must not be smaller than 1.");const d=A(e,n),i=this.days.length!==31,l=this.weekdays.length!==7;if(!i&&!l)return s>d?t==="next"?void 0:d:s;let r;i&&(r=t==="next"?this.days.find(f=>f>=s):this.reversed.days.find(f=>f<=s),r!==void 0&&r>d&&(r=void 0));let u;if(l){const f=new Date(e,n,s).getDay(),m=t==="next"?(a=this.weekdays.find(w=>w>=f))!==null&&a!==void 0?a:this.weekdays[0]:(h=this.reversed.weekdays.find(w=>w<=f))!==null&&h!==void 0?h:this.reversed.weekdays[0];if(m!==void 0){const w=t==="next"?g(f,m):g(m,f);u=t==="next"?s+w:s-w,(u>d||u<1)&&(u=void 0)}}if(r!==void 0&&u!==void 0)return t==="next"?Math.min(r,u):Math.max(r,u);if(r!==void 0)return r;if(u!==void 0)return u}getNextDate(t=new Date){const e=y(t);let n=e.year,s=this.months.findIndex(h=>h>=e.month);s===-1&&(s=0,n++);const a=this.months.length*5;for(let h=0;h<a;h++){const d=n+Math.floor((s+h)/this.months.length),i=this.months[(s+h)%this.months.length],l=d===e.year&&i===e.month;let r=this.findAllowedDayInMonth("next",d,i,l?e.day:1),u=l&&r===e.day;if(r!==void 0&&u){const f=this.findAllowedTime("next",e);if(f!==void 0)return new Date(d,i,r,f.hour,f.minute,f.second);r=this.findAllowedDayInMonth("next",d,i,r+1),u=!1}if(r!==void 0&&!u)return new Date(d,i,r,this.hours[0],this.minutes[0],this.seconds[0])}throw new Error("No valid next date was found.")}getNextDates(t,e){const n=[];let s;for(let a=0;a<t;a++)s=this.getNextDate(s??e),n.push(s);return n}*getNextDatesIterator(t,e){let n;for(;;){if(n=this.getNextDate(t),t=n,e&&e.getTime()<n.getTime())return;yield n}}getPrevDate(t=new Date){const e=y(t);let n=e.year,s=this.reversed.months.findIndex(h=>h<=e.month);s===-1&&(s=0,n--);const a=this.reversed.months.length*5;for(let h=0;h<a;h++){const d=n-Math.floor((s+h)/this.reversed.months.length),i=this.reversed.months[(s+h)%this.reversed.months.length],l=d===e.year&&i===e.month;let r=this.findAllowedDayInMonth("prev",d,i,l?e.day:31),u=l&&r===e.day;if(r!==void 0&&u){const f=this.findAllowedTime("prev",e);if(f!==void 0)return new Date(d,i,r,f.hour,f.minute,f.second);r>1&&(r=this.findAllowedDayInMonth("prev",d,i,r-1),u=!1)}if(r!==void 0&&!u)return new Date(d,i,r,this.reversed.hours[0],this.reversed.minutes[0],this.reversed.seconds[0])}throw new Error("No valid previous date was found.")}getPrevDates(t,e){const n=[];let s;for(let a=0;a<t;a++)s=this.getPrevDate(s??e),n.push(s);return n}*getPrevDatesIterator(t,e){let n;for(;;){if(n=this.getPrevDate(t),t=n,e&&e.getTime()>n.getTime())return;yield n}}matchDate(t){const{second:e,minute:n,hour:s,day:a,month:h,weekday:d}=y(t);return this.seconds.indexOf(e)===-1||this.minutes.indexOf(n)===-1||this.hours.indexOf(s)===-1||this.months.indexOf(h)===-1?!1:this.days.length!==31&&this.weekdays.length!==7?this.days.indexOf(a)!==-1||this.weekdays.indexOf(d)!==-1:this.days.indexOf(a)!==-1&&this.weekdays.indexOf(d)!==-1}}const M={min:0,max:59},E={min:0,max:59},T={min:0,max:23},N={min:1,max:31},S={min:1,max:12,aliases:{jan:"1",feb:"2",mar:"3",apr:"4",may:"5",jun:"6",jul:"7",aug:"8",sep:"9",oct:"10",nov:"11",dec:"12"}},k={min:0,max:7,aliases:{mon:"1",tue:"2",wed:"3",thu:"4",fri:"5",sat:"6",sun:"7"}},b={"@yearly":"0 0 1 1 *","@annually":"0 0 1 1 *","@monthly":"0 0 1 1 *","@weekly":"0 0 * * 0","@daily":"0 0 * * *","@hourly":"0 * * * *","@minutely":"* * * * *"};function c(o,t){const e=new Set;if(o==="*"){for(let r=t.min;r<=t.max;r=r+1)e.add(r);return e}const n=o.split(",");if(n.length>1)return n.forEach(r=>{c(r,t).forEach(f=>e.add(f))}),e;const s=r=>{var u,f;r=(f=(u=t.aliases)===null||u===void 0?void 0:u[r.toLowerCase()])!==null&&f!==void 0?f:r;const m=parseInt(r,10);if(Number.isNaN(m))throw new Error(`Failed to parse ${o}: ${r} is NaN.`);if(m<t.min||m>t.max)throw new Error(`Failed to parse ${o}: ${r} is outside of constraint range of ${t.min} - ${t.max}.`);return m},a=/^((([0-9a-zA-Z]+)-([0-9a-zA-Z]+))|\*)(\/([0-9]+))?$/.exec(o);if(a===null)return e.add(s(o)),e;const h=a[1]==="*"?t.min:s(a[3]),d=a[1]==="*"?t.max:s(a[4]);if(h>d)throw new Error(`Failed to parse ${o}: Invalid range (start: ${h}, end: ${d}).`);const i=a[6];let l=1;if(i!==void 0){if(l=parseInt(i,10),Number.isNaN(l))throw new Error(`Failed to parse step: ${i} is NaN.`);if(l<1)throw new Error(`Failed to parse step: Expected ${i} to be greater than 0.`)}for(let r=h;r<=d;r=r+l)e.add(r);return e}function x(o){var t;if(typeof o!="string")throw new TypeError("Invalid cron expression: must be of type string.");o=(t=b[o.toLowerCase()])!==null&&t!==void 0?t:o;const e=o.split(" ");if(e.length<5||e.length>6)throw new Error("Invalid cron expression: expected 5 or 6 elements.");const n=e.length===6?e[0]:"0",s=e.length===6?e[1]:e[0],a=e.length===6?e[2]:e[1],h=e.length===6?e[3]:e[2],d=e.length===6?e[4]:e[3],i=e.length===6?e[5]:e[4];return new I({seconds:c(n,M),minutes:c(s,E),hours:c(a,T),days:c(h,N),months:new Set(Array.from(c(d,S)).map(l=>l-1)),weekdays:new Set(Array.from(c(i,k)).map(l=>l%7))})}class D{static setTimeout(t,e,n){const a=t.getNextDate().getTime()-Date.now();return p(v(e,n==null?void 0:n.errorHandler),a)}static setInterval(t,e,n){var s;const a=(s=n==null?void 0:n.handle)!==null&&s!==void 0?s:{timeoutId:void 0},{timeoutId:h}=this.setTimeout(t,()=>{v(e,n==null?void 0:n.errorHandler)(),this.setInterval(t,e,Object.assign(Object.assign({},n),{handle:a}))});return a.timeoutId=h,a}static clearTimeoutOrInterval(t){t.timeoutId&&clearTimeout(t.timeoutId)}}console.log("Script started successfully");WA.onInit().then(()=>{console.log("Scripting API ready");const o=x("0 19 * * *");D.setInterval(o,()=>{WA.room.showLayer("night"),WA.room.showLayer("light")});const t=x("0 7 * * *");D.setInterval(t,()=>{WA.room.hideLayer("night"),WA.room.hideLayer("light")});const e=new Date,n=new Date(e.getFullYear(),e.getMonth(),e.getDate(),19,0,0),s=new Date(e.getFullYear(),e.getMonth(),e.getDate(),7,0,0);console.log(s),console.log(n),console.log(e),console.log(e<n),console.log(e>s),console.log(e<n&&e>s),e<n&&e>s&&(WA.room.hideLayer("night"),WA.room.hideLayer("light"))}).catch(o=>console.error(o));
